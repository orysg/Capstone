name: front-guard

services:
  nginx:
    build:
      context: .
      dockerfile: ./nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
    profiles:
      - prod
      # nginx dockerfile is broken atm, most likely my root context workaround to avoid mounting didn't work
      # Could possibly make frontend itself a multistage build, probably the better idea honestly
      # https://stackoverflow.com/questions/24537340/docker-adding-a-file-from-a-parent-directory
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
  backend:
    build: ./backend
    ports:
      - "4000:4000"
    env_file:
      - ./.env/dev.env
    depends_on:
      - db
  db:
    image: postgres:16.4-alpine3.20
    env_file:
      - ./.env/dev.env
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql

# docker exec -it front-guard-db-1 psql -U myuser -d mydb

# Need dev/prod profiles
# Need radar service

# build:
#   context: ./frontend
#   target: prod

# Consider a multi stage build for react -> nginx

# Mount db init script during dev, bake for prod

# networks:
#   internal:
#     internal: true  # Private network, services communicate internally
#   external:
#     driver: bridge  # Publicly accessible network, nginx only